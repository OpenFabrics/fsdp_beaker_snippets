{#
##
## Stable System Profile Snippet
##
#}
{# originally from snippets/sysprofile/helpers/profile_decoder_ring #}
{#
## This snippet tries to decode the profile name and assign certain parts to
## variables. Currently it's a quick hack to deal with stable systems but it
## can grow to sumthing purty.. maybe..
#}
{% set distro_family = None %}
{% set distro_variant = None %}
{% set distro_major_version_number = None %}
{% set distro_minor_version_number = None %}
{% set distro_is_rc = False %}
{% set distro_is_rc_ver = None %}
{% if re.search("-RC-?\d", distro.name) %}
{% set temp = re.search("-RC-?(\d|\d\.?\d?)", distro.name) %}
{% set distro_is_rc = True %}
{% set distro_is_rc_ver = temp.group(1)|int %}
{% endif %}
{% if re.search("-LE-?\d", distro.name) %}
{% set distro_family_parsed = re.match("([a-zA-Z]+)-LE-?(\d+)?\.?(\d+)?", distro.name) %}
{% set distro_family = distro_family_parsed.group(1) %}
{% set distro_major_version_number = distro_family_parsed.group(2)|int %}
{% elif re.search("-ALT-\d", distro.name) %}
{% set distro_family_parsed = re.match("([a-zA-Z]+)-ALT-(\d+)?\.?(\d+)?", distro.name) %}
{% set distro_family = distro_family_parsed.group(1) %}
{% set distro_major_version_number = distro_family_parsed.group(2)|int %}
{% else %}
{% set distro_family_parsed = re.match("([a-zA-Z]+)-?(\d+)?\.?(\d+)?", distro.name) %}
{% set distro_family = distro_family_parsed.group(1) %}
{% set distro_major_version_number = distro_family_parsed.group(2)|int %}
{% endif %}
{% if re.search("-U\d+", distro.name) %}
{% set temp = re.search("-U(\d+)", distro.name) %}
{% set distro_minor_version_number = temp.group(1)|int %}
{% elif re.search("-GOLD", distro.name) %}
{% set distro_minor_version_number = 0 %}
{% elif re.search("\d+\.(\d+)", distro.name) %}
{% set temp = re.search("\d+\.(\d+)", distro.name) %}
{% set distro_minor_version_number = temp.group(1)|int %}
{% else %}
{% set distro_minor_version_number = distro_family_parsed.group(3)|int %}
{% endif %}
{% set distro_variant = distro_tree.variant %}
# Distribution a Nightly? {{ distro_is_nightly }}
# Distribution a Release Canidate? {{ distro_is_rc }}
{% if distro_is_rc %}
# Distribution Release Canidate Version: {{ distro_is_rc_ver }}
{% endif %}
# Distribution a Alpha or Beta? {{ distro_is_a_or_b }}
# Distribution a Snapshot? {{ distro_is_snapshot }}
{% if distro_is_snapshot %}
# Distribution Snapshot Version: {{ distro_is_snapshot_ver }}
{% endif %}
# Distribution Family: {{ distro_family }}
# Distribution Major Version: {{ distro_major_version_number }}
# Distribution Minor Version: {{ distro_minor_version_number }}
# Distribution Variant: {{ distro_variant }}
# Distribution Tree: {{ distro_tree }}
{% if var('test_profile') is defined %}
# Test Profile: {{ test_profile }}
{% endif %}

install
cmdline
{{ snippet('network') }}

{{ snippet('install_method') }}

keyboard us
lang en_US
timezone America/New_York
firewall --disabled
bootloader --location="mbr"
{{ snippet('Stable_System_Partitioning') }}

{% if distro_family == "RHEL" and distro_major_version_number != 8 %}
auth --enablemd5 --enableshadow
{% else %}
# no auth for RHEL8, use authselect later
{% endif %}
rootpw --iscrypted {{ password|default("$1$s9SM/aIM$ATv5Gcjkd2b/G/rkddVTq0") }}

{% if distro_family == "RHEL" %}
selinux --enforcing
{% endif %}
skipx
reboot

{#
## lets not play with putting comments in the packages section... Anaconda might choke
#}
{% set package_arguments = "--resolvedeps --ignoremissing" %}

{% if distro_family == "RHELSA" and distro_major_version_number == 7 %}
{% set package_arguments = package_arguments|replace("--resolvedeps", "--multilib") %}
{% endif %}

{% if distro_family == "RHEL" and distro_major_version_number == 7 %}
{% set package_arguments = package_arguments|replace("--resolvedeps", "--multilib") %}
{% endif %}

{% if distro_family == "RHEL" and distro_major_version_number == 8 %}
{% set package_arguments = package_arguments|replace("--resolvedeps", "--multilib") %}
{% endif %}

%packages {{ package_arguments }}
{% if minimal is defined %}
perl-DateManip 
perl-XML-Twig 
perl-XML-Parser
{% else %}
@Everything
{% endif %}

{% if distro_family == "RHEL" or distro_family == "RHELSA" %}
{% if distro_major_version_number >= 7 %}
{% if distro_variant == "Client" %}
@^GNOME Desktop
{% endif %}
{% if distro_variant == "Workstation" %}
@^Development and Creative Workstation
{% endif %}
{% if distro_variant == "Server" %}
@^Server with GUI
{% endif %}
{% if distro_variant == "ComputeNode" %}
@^Compute Node
{% endif %}
{% if distro_variant == "BaseOS" %}
@^Server with GUI
{% endif %}
-dnssec-trigger
-dracut-fips*
{% endif %}
{% endif %} 

-@Conflicts

{% if distro_family == "RHELSA" %}
nfs-utils
%end
{% endif %}
{% if distro_family == "RHEL" and distro_major_version_number == 7 %}
%end
{% endif %}
{% if distro_family == "RHEL" and distro_major_version_number == 8 %}
%end
{% endif %}
%pre
{{ snippet('rhts_pre') }}
%end
# ESH Scripting
%post
(
hostname {{ system.fqdn }}
source /etc/profile
{% if distro_family == "RHEL" and distro_major_version_number > 5 %}
{% set no_debug_repos = True %}
{{ snippet('print_repos') }}

# Add Custom Repos
{% if customrepos %}
{% for repo in customrepos|split('|') %}
{% set repo_id, url = repo|split(',', 1) %}
cat << EOF >/etc/yum.repos.d/{{ repo_id }}.repo
[{{ repo_id }}]
name={{ repo_id }}
baseurl={{ url }}
enabled=1
gpgcheck=0
skip_if_unavailable=1
EOF

{% endfor %}
{% endif %}

{% if distro_family == "RHEL" and distro_major_version_number >= 7 %}
# RHEL7 and above requirements
yum install -y --skip-broken --disablerepo=\*debuginfo wget bind-utils 
{% endif %}

yum clean -y all
for k in `grubby --info=ALL | grep xen | cut -f2 -d'='`
  do grubby --remove-kernel="/boot$k"
done

for i in auditd sshd network rpcbind rsyslog sendmail irqbalance cpuspeed acpid crond udev-post sysstat nfslock netfs messagebus mdmonitor lvm2-monitor portmap
  do /usr/bin/systemctl enable $i 
done
{% if var('optimize-virt') is defined %}
echo vm.pagecache=5 30 55 >> /etc/sysctl.conf
{% endif %}
%end
